type TimelineEvent @entity {
  id: ID!
  createdAt: BigInt!
  createdBy: Bytes!
  type: String!
  shamanAddress: Bytes!
  metadata: String
  shaman: Shaman!
  projectMetadata: String
  totalSecondsWorked: BigInt
  sessionsTime: [BigInt!]
  sessionsValue: [Int!]
  totalAmountClaimed: BigInt
  isLocked: Boolean
  mutinyFrom: Bytes
  mutinyTo: Bytes
  updateIntervalFrom: BigInt
  updateIntervalTo: BigInt
  updateTokenPerSecondFrom: BigInt
  updateTokenPerSecondTo: BigInt
  updatePercsFrom: [BigInt!]
  updatePercsTo: [BigInt!]
}

type Shaman @entity {
  id: ID! # address
  createdAt: BigInt!
  baal: Bytes! # address
  address: Bytes! #address
  interval: BigInt!
  tokenPerSecond: BigInt!
  valueScalePercs: [BigInt!]!
  isLocked: Boolean!
  teamLead: Bytes! # address
  sharesOrLoot: Boolean!
  summoner: Bytes! # address
  timeline: [TimelineEvent!]! @derivedFrom(field: "shaman")
  projectMetadata: String!
}

type EventTransaction @entity {
  id: ID!
  createdAt: BigInt!
}
